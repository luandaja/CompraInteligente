@model CompraInteligente.Models.Simulador

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Simulador</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.SimuladorID)

        <div class="form-group">
            @Html.LabelFor(model => model.plazo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.plazo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.plazo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.tipoMoneda, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.tipoMoneda, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.tipoMoneda, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fechaDesenbolso, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fechaDesenbolso, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fechaDesenbolso, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.diaDePago, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.diaDePago, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.diaDePago, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.tipoDeCredito, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.tipoDeCredito, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.tipoDeCredito, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.informacionPeriodica, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.informacionPeriodica)
                    @Html.ValidationMessageFor(model => model.informacionPeriodica, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.tipoDeSeguroDesgravamen, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.tipoDeSeguroDesgravamen, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.tipoDeSeguroDesgravamen, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cuotasPorAnho, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cuotasPorAnho, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cuotasPorAnho, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.valorDelBien, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.valorDelBien, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.valorDelBien, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.geografia, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.geografia, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.geografia, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.tipoSeguroVehicular, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.tipoSeguroVehicular, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.tipoSeguroVehicular, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cuotaInicial_num, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cuotaInicial_num, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cuotaInicial_num, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
